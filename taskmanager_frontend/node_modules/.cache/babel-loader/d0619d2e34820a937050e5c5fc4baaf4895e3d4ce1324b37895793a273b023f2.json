{"ast":null,"code":"var _jsxFileName = \"Z:\\\\ideapad s145\\\\Go Project\\\\taskmanager_frontend\\\\src\\\\components\\\\TaskList.js\";\nimport React from \"react\";\nimport \"./TaskList.css\"; // Import the external CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onDelete,\n  onToggleComplete\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"task-list-title\",\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-tasks\",\n      children: \"No tasks available. Add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `task-item ${task.completed ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-text\",\n          onClick: () => onToggleComplete(task.id),\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => onDelete(task.id),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskList","tasks","onDelete","onToggleComplete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","completed","onClick","id","text","_c","$RefreshReg$"],"sources":["Z:/ideapad s145/Go Project/taskmanager_frontend/src/components/TaskList.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./TaskList.css\"; // Import the external CSS file\r\n\r\nconst TaskList = ({ tasks, onDelete, onToggleComplete }) => {\r\n    return (\r\n        <div className=\"task-list-container\">\r\n            <h2 className=\"task-list-title\">Your Tasks</h2>\r\n            {tasks.length === 0 ? (\r\n                <p className=\"no-tasks\">No tasks available. Add some!</p>\r\n            ) : (\r\n                <ul className=\"task-list\">\r\n                    {tasks.map((task) => (\r\n                        <li \r\n                            key={task.id} \r\n                            className={`task-item ${task.completed ? \"completed\" : \"\"}`}\r\n                        >\r\n                            <span \r\n                                className=\"task-text\" \r\n                                onClick={() => onToggleComplete(task.id)}\r\n                            >\r\n                                {task.text}\r\n                            </span>\r\n                            <button \r\n                                className=\"delete-button\" \r\n                                onClick={() => onDelete(task.id)}\r\n                            >\r\n                                âœ–\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAiB,CAAC,KAAK;EACxD,oBACIJ,OAAA;IAAKK,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCN,OAAA;MAAIK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9CR,KAAK,CAACS,MAAM,KAAK,CAAC,gBACfX,OAAA;MAAGK,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzDV,OAAA;MAAIK,SAAS,EAAC,WAAW;MAAAC,QAAA,EACpBJ,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACZb,OAAA;QAEIK,SAAS,EAAE,aAAaQ,IAAI,CAACC,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;QAAAR,QAAA,gBAE5DN,OAAA;UACIK,SAAS,EAAC,WAAW;UACrBU,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACS,IAAI,CAACG,EAAE,CAAE;UAAAV,QAAA,EAExCO,IAAI,CAACI;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACPV,OAAA;UACIK,SAAS,EAAC,eAAe;UACzBU,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAACU,IAAI,CAACG,EAAE,CAAE;UAAAV,QAAA,EACpC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAdJG,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACQ,EAAA,GA/BIjB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}