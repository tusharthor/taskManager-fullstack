{"ast":null,"code":"var _jsxFileName = \"Z:\\\\ideapad s145\\\\Go Project\\\\taskmanager_frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./TaskList.css\"; // Import external CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  // State to store tasks, loading state, and errors\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch tasks from the API\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/tasks\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch tasks\");\n        }\n        const data = await response.json();\n        setTasks(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []); // Empty dependency array to run only once when the component mounts\n\n  // Delete task handler\n  const onDelete = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  // Toggle task completion handler\n  const onToggleComplete = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n\n  // Render loading or error message\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading tasks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"task-list-title\",\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-tasks\",\n      children: \"No tasks available. Add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"task-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `task-status ${task.completed ? \"completed\" : \"\"}`,\n              onClick: () => onToggleComplete(task.id),\n              children: task.completed ? \"Completed\" : \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => onDelete(task.id),\n              children: \"\\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","response","fetch","ok","Error","data","json","err","message","onDelete","id","filter","task","onToggleComplete","map","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","title","description","onClick","_c","$RefreshReg$"],"sources":["Z:/ideapad s145/Go Project/taskmanager_frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./TaskList.css\"; // Import external CSS\r\n\r\nconst TaskList = () => {\r\n  // State to store tasks, loading state, and errors\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch tasks from the API\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/tasks\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch tasks\");\r\n        }\r\n        const data = await response.json();\r\n        setTasks(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []); // Empty dependency array to run only once when the component mounts\r\n\r\n  // Delete task handler\r\n  const onDelete = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  // Toggle task completion handler\r\n  const onToggleComplete = (id) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, completed: !task.completed } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  // Render loading or error message\r\n  if (loading) return <p>Loading tasks...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"task-list-container\">\r\n      <h2 className=\"task-list-title\">Your Tasks</h2>\r\n\r\n      {/* Display message if no tasks available */}\r\n      {tasks.length === 0 ? (\r\n        <p className=\"no-tasks\">No tasks available. Add some!</p>\r\n      ) : (\r\n        <table className=\"task-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Status</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* Map through tasks and display each task in a table row */}\r\n            {tasks.map((task) => (\r\n              <tr key={task.id}>\r\n                <td>{task.title}</td>\r\n                <td>{task.description}</td>\r\n                <td>\r\n                  <span\r\n                    className={`task-status ${task.completed ? \"completed\" : \"\"}`}\r\n                    onClick={() => onToggleComplete(task.id)}\r\n                  >\r\n                    {task.completed ? \"Completed\" : \"Pending\"}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"delete-button\"\r\n                    onClick={() => onDelete(task.id)}\r\n                  >\r\n                    âœ–\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}